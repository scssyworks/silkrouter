{"version":3,"file":"silkrouter.esm.js","sources":["../../src/js/constants/index.js","../../src/js/utils/params.js","../../node_modules/is-object/index.js","../../src/js/utils/triggerEvent.js","../../src/js/utils/utils.js","../../src/js/api/set/index.js","../../src/js/utils/getPath.js","../../src/js/api/routerEvent/index.js","../../src/js/api/callOnce/index.js","../../src/js/api/collate/index.js","../../src/js/api/router/RouterCore.js","../../src/js/api/router/Router.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const POP_STATE = 'popstate';\nexport const REG_ROUTE_PARAMS = /:[^/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const HISTORY_UNSUPPORTED =\n  'History is not supported in this environment!';\nexport const INVALID_ROUTE = 'Route format is incorrect!';\nexport const VIRTUAL_PUSHSTATE = 'vpushstate';\nexport const QRY = '?';\nexport const EMPTY = '';\nexport const UNDEF = void 0;\nexport const STATE = 'State';\nexport const PUSH = `push${STATE}`;\nexport const REPLACE = `replace${STATE}`;\n","import { EMPTY, REG_ROUTE_PARAMS } from '../constants';\n\n/**\n * Parses current path and returns params object\n * @param {string} expr Route expression\n * @param {string} path URL path\n * @returns {{[key: string]: any}}\n */\nexport function resolveParams(expr, path) {\n  const params = {};\n  if (REG_ROUTE_PARAMS.test(expr)) {\n    const pathRegex = new RegExp(\n      expr.replace(/\\//g, '\\\\/').replace(/:[^/\\\\]+/g, '([^\\\\/]+)'),\n    );\n    REG_ROUTE_PARAMS.lastIndex = 0;\n    if (pathRegex.test(path)) {\n      const keys = Array.from(expr.match(REG_ROUTE_PARAMS)).map(key =>\n        key.replace(':', EMPTY),\n      );\n      const values = Array.from(path.match(pathRegex));\n      values.shift();\n      keys.forEach((key, index) => {\n        params[key] = values[index];\n      });\n    }\n  }\n  return params;\n}\n","'use strict';\n\nmodule.exports = function isObject(x) {\n\treturn typeof x === 'object' && x !== null;\n};\n","/**\n * Function to trigger custom event\n * @param {HTMLElement} context Context element\n * @param {string} eventType Event type\n * @param {any[]} data Data to be passed to handler\n */\nexport function trigger(context, eventType, data) {\n  context.dispatchEvent(\n    new CustomEvent(eventType, {\n      bubbles: true,\n      cancelable: true,\n      detail: data || [],\n    }),\n  );\n}\n","import { EMPTY, REG_PATHNAME } from '../constants';\n\n/**\n * Checks if input value is a string\n * @param {any} str String value\n * @returns {boolean}\n */\nexport function isString(str) {\n  return typeof str === 'string';\n}\n\n/**\n * Safely trims string\n * @param {string} str String\n */\nexport function trim(str) {\n  return isString(str) ? str.trim() : EMPTY;\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nexport function isValidRoute(route) {\n  return REG_PATHNAME.test(route);\n}\n","import isObject from 'is-object';\nimport {\n  EMPTY,\n  INVALID_ROUTE,\n  PUSH,\n  QRY,\n  REPLACE,\n  VIRTUAL_PUSHSTATE,\n} from '../../constants';\nimport { trigger } from '../../utils/triggerEvent';\nimport { isValidRoute, trim } from '../../utils/utils';\n\n/**\n * Sets the current route\n * @private\n * @typedef {import('./types').RouteConfig} RouteConfig\n * @param {string} routeStr Route string\n * @param {RouteConfig} [rConfig] Route config\n */\nexport default function set(routeStr, rConfig) {\n  const routeConfig = isObject(rConfig) ? rConfig : {};\n  const [route, qs] = routeStr.split(QRY);\n  const {\n    replace = false,\n    preventDefault = false,\n    queryString = qs,\n    data,\n    pageTitle = null,\n  } = routeConfig;\n  const { preservePath, hashRouting: hash, history, context } = this.config;\n  // Resolve to URL query string if it's not explicitly passed\n  let routeString = trim(route);\n  if (isValidRoute(routeString)) {\n    const path = routeString;\n    if (hash) {\n      routeString = `${preservePath ? '' : '/'}#${routeString}`;\n    }\n    // Append query string\n    routeString = `${routeString}${trim(\n      queryString ? `${QRY + queryString}` : EMPTY,\n    )}`;\n    const savedState = history.state || { idx: 0 };\n    history[replace ? REPLACE : PUSH](\n      {\n        data,\n        idx: savedState.idx + 1,\n      },\n      pageTitle,\n      routeString,\n    );\n    if (!preventDefault && path) {\n      trigger(context, VIRTUAL_PUSHSTATE, [\n        {\n          path,\n          hash,\n        },\n        undefined,\n        this,\n      ]);\n    }\n  } else {\n    throw new TypeError(INVALID_ROUTE);\n  }\n}\n","import { QRY } from '../constants';\nimport { trim } from './utils';\n\nexport const getPath = (isHash, location) => {\n  return trim(\n    isHash ? location.hash.substring(1).split(QRY)[0] : location.pathname,\n  );\n};\n","import { QRY } from '../../constants';\nimport { trim } from '../../utils/utils';\n\n/**\n * Creates an instance of router event\n */\nexport class RouterEvent {\n  /**\n   * Creates a instance of router event\n   * @typedef {import('./types').RouteInfo} RouteInfo\n   * @param {RouteInfo} routeInfo Route information\n   * @param {CustomEvent} currentEvent Current event object\n   */\n  constructor(routeInfo, currentEvent) {\n    // Set relevant parameters\n    const [routeObject, originalEvent, routerInstance] = routeInfo;\n    const { location, history } = routerInstance.config;\n    this.route = routeObject.path;\n    this.isHashRoute = routeObject.hash;\n    this.router = routerInstance;\n    this.currentEvent = originalEvent || currentEvent;\n    this.query = {\n      path: trim(location.search.substring(1)),\n      hash: trim(location.hash.split(QRY)[1]),\n    };\n    const { state } = originalEvent || {};\n    const { data, idx = 0 } = state || history.state || {};\n    this.data = data;\n    this.index = +idx;\n  }\n}\n","import { Observable } from 'rxjs';\nimport { getPath } from '../../utils/getPath';\nimport { RouterEvent } from '../routerEvent';\n\n/**\n * Calls the handler once on initialization\n * @param {boolean} [isd] Optional flag used as a switch\n * @returns {(observable: Observable<any>) => Observable<any>}\n */\nexport default function callOnce(isd) {\n  let isDone = isd;\n  const { hashRouting: hash, location, init } = this.config;\n  const path = getPath(hash, location);\n  return observable =>\n    new Observable(subscriber => {\n      const subn = observable.subscribe(subscriber);\n      if (!isDone) {\n        isDone = true;\n        if (init && path) {\n          subscriber.next(new RouterEvent([{ path, hash }, undefined, this]));\n        }\n      }\n      return () => {\n        subn.unsubscribe();\n      };\n    });\n}\n","import { Observable } from 'rxjs';\nimport { RouterEvent } from '../routerEvent';\n\n/**\n * Attaches a route handler\n * @returns {(observable: Observable<any>) => Observable<any>}\n */\nexport default function collate() {\n  return observable =>\n    new Observable(subscriber => {\n      const subn = observable.subscribe({\n        next: event => {\n          const [, , routerInstance] = event.detail;\n          if (routerInstance === this) {\n            subscriber.next(new RouterEvent(event.detail, event));\n          }\n        },\n        error: subscriber.error,\n        complete: subscriber.complete,\n      });\n      return () => {\n        subn.unsubscribe();\n      };\n    });\n}\n","import { fromEvent } from 'rxjs';\nimport {\n  HISTORY_UNSUPPORTED,\n  POP_STATE,\n  PUSH,\n  VIRTUAL_PUSHSTATE,\n} from '../../constants';\nimport { getPath } from '../../utils/getPath';\nimport { trigger } from '../../utils/triggerEvent';\nimport callOnce from '../callOnce';\nimport collate from '../collate';\n\n/**\n * Core router class to handle basic routing functionality\n */\nexport class RouterCore {\n  static get global() {\n    return typeof globalThis !== 'undefined' ? globalThis : global || self;\n  }\n  /**\n   * Router core constructor\n   * @typedef {import('./types').RouterCoreConfig} RouterCoreConfig\n   * @param {RouterCoreConfig} routerCoreConfig Route core configuration\n   */\n  constructor({ history, context, location, hash }) {\n    if (!history[PUSH]) {\n      throw new Error(HISTORY_UNSUPPORTED);\n    }\n    this.popStateSubscription = fromEvent(\n      RouterCore.global,\n      POP_STATE,\n    ).subscribe(e => {\n      const path = getPath(hash, location);\n      if (path) {\n        trigger(context, VIRTUAL_PUSHSTATE, [{ path, hash }, e, this]);\n      }\n    });\n    this.listeners = fromEvent(context, VIRTUAL_PUSHSTATE).pipe(\n      collate.apply(this),\n    );\n  }\n  /**\n   * Allows you to add operators for any pre-processing before a handler is called\n   * @typedef {import('./types').Operator} Operator\n   * @typedef {import('rxjs').Observable} Observable\n   * @param  {...Operator} ops Operators\n   * @returns {Observable<any>}\n   */\n  pipe(...ops) {\n    return this.listeners.pipe(callOnce.apply(this), ...ops);\n  }\n  /**\n   * Attaches a route handler\n   * @typedef {import('../routerEvent/index').RouterEvent} RouterEvent\n   * @param {(event: RouterEvent) => void} fn Route handler\n   */\n  subscribe(fn) {\n    return this.pipe().subscribe(fn);\n  }\n  /**\n   * Destroys current router instance\n   * @param {() => void} callback Callback for destroy function\n   */\n  destroy(callback) {\n    if (typeof callback === 'function') {\n      callback();\n    }\n    this.popStateSubscription.unsubscribe(); // Unsubscribe popstate event\n  }\n}\n","import isObject from 'is-object';\nimport set from '../set';\nimport { RouterCore } from './RouterCore';\n\n/**\n * Browser router to handle routing logic\n */\nexport class Router extends RouterCore {\n  /**\n   * Router constructor\n   * @typedef {import('./types').RouterConfig} RouterConfig\n   * @param {RouterConfig} config\n   */\n  constructor(config) {\n    config = isObject(config) ? config : {};\n    const { history, location, document } = RouterCore.global;\n    const context = document.body;\n    super({\n      history,\n      location,\n      context,\n      hash: config.hashRouting,\n    });\n    this.config = Object.freeze({\n      init: true,\n      hashRouting: false,\n      preservePath: false,\n      context,\n      history,\n      location,\n      ...config,\n    });\n    if (config.hashRouting && !location.hash) {\n      this.set('/', {\n        replace: true,\n        preventDefault: true, // Don't execute route handlers\n      });\n    }\n  }\n  /**\n   * Sets the current route path\n   * @typedef {import('../set/types').RouteConfig} RouteConfig\n   * @param {string} path Route path\n   * @param {RouteConfig} routeConfig Route config\n   */\n  set(path, routeConfig) {\n    set.apply(this, [path, routeConfig]);\n  }\n}\n"],"names":["POP_STATE","REG_ROUTE_PARAMS","REG_PATHNAME","HISTORY_UNSUPPORTED","INVALID_ROUTE","VIRTUAL_PUSHSTATE","QRY","EMPTY","STATE","PUSH","REPLACE","resolveParams","expr","path","params","test","pathRegex","RegExp","replace","lastIndex","keys","Array","from","match","map","key","values","shift","forEach","index","trigger","context","eventType","data","dispatchEvent","CustomEvent","bubbles","cancelable","detail","isString","str","trim","isValidRoute","route","set","routeStr","rConfig","routeConfig","isObject","qs","split","preventDefault","queryString","pageTitle","preservePath","hashRouting","hash","history","config","routeString","savedState","state","idx","undefined","TypeError","getPath","isHash","location","substring","pathname","RouterEvent","constructor","routeInfo","currentEvent","routeObject","originalEvent","routerInstance","isHashRoute","router","query","search","callOnce","isd","isDone","init","observable","Observable","subscriber","subn","subscribe","next","unsubscribe","collate","event","error","complete","RouterCore","global","globalThis","self","_ref","Error","popStateSubscription","fromEvent","e","listeners","pipe","apply","_len","arguments","length","ops","_key","fn","destroy","callback","Router","document","body","Object","freeze"],"mappings":"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","x_google_ignoreList":[2]}