{"version":3,"file":"silkrouter.esm.js","sources":["../../src/js/constants/index.js","../../src/js/utils/params.js","../../node_modules/is-object/index.js","../../src/js/utils/triggerEvent.js","../../src/js/utils/utils.js","../../src/js/api/set/index.js","../../src/js/utils/getPath.js","../../src/js/api/routerEvent/index.js","../../src/js/api/collate/index.js","../../src/js/api/callOnce/index.js","../../src/js/api/router/RouterCore.js","../../src/js/api/router/Router.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const POP_STATE = 'popstate';\nexport const REG_ROUTE_PARAMS = /:[^/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const HISTORY_UNSUPPORTED =\n  'History is not supported in this environment!';\nexport const INVALID_ROUTE = 'Route format is incorrect!';\nexport const VIRTUAL_PUSHSTATE = 'vpushstate';\nexport const QRY = '?';\nexport const EMPTY = '';\nexport const UNDEF = void 0;\nexport const TYPEOF_STR = typeof EMPTY;\nexport const TYPEOF_BOOL = typeof true;\nexport const TYPEOF_UNDEF = typeof UNDEF;\nexport const TYPEOF_FUNC = typeof (() => {});\nexport const STATE = 'State';\nexport const PUSH = `push${STATE}`;\nexport const REPLACE = `replace${STATE}`;\n","import { EMPTY, REG_ROUTE_PARAMS } from '../constants';\n\n/**\n * Parses current path and returns params object\n * @param {string} expr Route expression\n * @param {string} path URL path\n * @returns {{[key: string]: any}}\n */\nexport function resolveParams(expr, path) {\n  const params = {};\n  if (REG_ROUTE_PARAMS.test(expr)) {\n    const pathRegex = new RegExp(\n      expr.replace(/\\//g, '\\\\/').replace(/:[^/\\\\]+/g, '([^\\\\/]+)')\n    );\n    REG_ROUTE_PARAMS.lastIndex = 0;\n    if (pathRegex.test(path)) {\n      const keys = Array.from(expr.match(REG_ROUTE_PARAMS)).map((key) =>\n        key.replace(':', EMPTY)\n      );\n      const values = Array.from(path.match(pathRegex));\n      values.shift();\n      keys.forEach((key, index) => {\n        params[key] = values[index];\n      });\n    }\n  }\n  return params;\n}\n","'use strict';\n\nmodule.exports = function isObject(x) {\n\treturn typeof x === 'object' && x !== null;\n};\n","/**\n * Function to trigger custom event\n * @param {HTMLElement} context Context element\n * @param {string} eventType Event type\n * @param {any[]} data Data to be passed to handler\n */\nexport function trigger(context, eventType, data) {\n  context.dispatchEvent(\n    new CustomEvent(eventType, {\n      bubbles: true,\n      cancelable: true,\n      detail: data || [],\n    })\n  );\n}\n","import { EMPTY, REG_PATHNAME, TYPEOF_STR } from '../constants';\n\n/**\n * Safely trims string\n * @param {string} str String\n */\nexport function trim(str) {\n  return typeof str === TYPEOF_STR ? str.trim() : EMPTY;\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nexport function isValidRoute(route) {\n  return REG_PATHNAME.test(route);\n}\n","import { trigger } from '../../utils/triggerEvent';\nimport {\n  VIRTUAL_PUSHSTATE,\n  INVALID_ROUTE,\n  UNDEF,\n  EMPTY,\n  QRY,\n  REPLACE,\n  PUSH,\n} from '../../constants';\nimport { isValidRoute, trim } from '../../utils/utils';\nimport isObject from 'is-object';\n\n/**\n * Sets the current route\n * @private\n * @typedef {import('./types').RouteConfig} RouteConfig\n * @param {string} routeStr Route string\n * @param {RouteConfig} [routeConfig] Route config\n * @returns {void}\n */\nexport default function set(routeStr, routeConfig) {\n  routeConfig = isObject(routeConfig) ? routeConfig : {};\n  const [route, qs] = routeStr.split(QRY);\n  const {\n    replace = false,\n    preventDefault = false,\n    queryString = qs,\n    data,\n    pageTitle = null,\n  } = routeConfig;\n  const { preservePath, hashRouting: hash, history, context } = this.config;\n  // Resolve to URL query string if it's not explicitly passed\n  routeStr = trim(route);\n  if (isValidRoute(routeStr)) {\n    const path = routeStr;\n    if (hash) {\n      routeStr = `${preservePath ? '' : '/'}#${routeStr}`;\n    }\n    // Append query string\n    routeStr = `${routeStr}${trim(\n      queryString ? `${QRY + queryString}` : EMPTY\n    )}`;\n    const savedState = history.state || { idx: 0 };\n    history[replace ? REPLACE : PUSH](\n      {\n        data,\n        idx: savedState.idx + 1,\n      },\n      pageTitle,\n      routeStr\n    );\n    if (!preventDefault && path) {\n      trigger(context, VIRTUAL_PUSHSTATE, [\n        {\n          path,\n          hash,\n        },\n        UNDEF,\n        this,\n      ]);\n    }\n  } else {\n    throw new TypeError(INVALID_ROUTE);\n  }\n}\n","import { QRY } from '../constants';\nimport { trim } from './utils';\n\nexport const getPath = (isHash, location) => {\n  return trim(\n    isHash ? location.hash.substring(1).split(QRY)[0] : location.pathname\n  );\n};\n","import { QRY } from '../../constants';\nimport { trim } from '../../utils/utils';\n\n/**\n * Creates an instance of router event\n */\nexport default class RouterEvent {\n  /**\n   * Creates a instance of router event\n   * @typedef {import('./types').RouteInfo} RouteInfo\n   * @param {RouteInfo} routeInfo Route information\n   * @param {CustomEvent} currentEvent Current event object\n   */\n  constructor(routeInfo, currentEvent) {\n    // Set relevant parameters\n    const [routeObject, originalEvent, routerInstance] = routeInfo;\n    const { location, history } = routerInstance.config;\n    this.route = routeObject.path;\n    this.isHashRoute = routeObject.hash;\n    this.router = routerInstance;\n    this.currentEvent = originalEvent || currentEvent;\n    this.query = {\n      path: trim(location.search.substring(1)),\n      hash: trim(location.hash.split(QRY)[1]),\n    };\n    const { state } = originalEvent || {};\n    const { data, idx = 0 } = state || history.state || {};\n    this.data = data;\n    this.index = +idx;\n  }\n}\n","import { Observable } from 'rxjs';\nimport RouterEvent from '../routerEvent';\n\n/**\n * Attaches a route handler\n * @returns {(observable: Observable<any>) => Observable<any>}\n */\nexport default function collate() {\n  return (observable) =>\n    new Observable((subscriber) => {\n      const subn = observable.subscribe({\n        next: (event) => {\n          const [, , routerInstance] = event.detail;\n          if (routerInstance === this) {\n            subscriber.next(new RouterEvent(event.detail, event));\n          }\n        },\n        error: subscriber.error,\n        complete: subscriber.complete,\n      });\n      return () => {\n        subn.unsubscribe();\n      };\n    });\n}\n","import { Observable } from 'rxjs';\nimport { UNDEF } from '../../constants';\nimport { getPath } from '../../utils/getPath';\nimport RouterEvent from '../routerEvent';\n\n/**\n * Calls the handler once on initialization\n * @param {boolean} [isDone] Optional flag used as a switch\n * @returns {(observable: Observable<any>) => Observable<any>}\n */\nexport default function callOnce(isDone) {\n  const { hashRouting: hash, location, init } = this.config;\n  const path = getPath(hash, location);\n  return (observable) =>\n    new Observable((subscriber) => {\n      const subn = observable.subscribe(subscriber);\n      if (!isDone) {\n        isDone = true;\n        if (init && path) {\n          subscriber.next(new RouterEvent([{ path, hash }, UNDEF, this]));\n        }\n      }\n      return () => {\n        subn.unsubscribe();\n      };\n    });\n}\n","import { Observable, fromEvent } from 'rxjs';\nimport {\n  HISTORY_UNSUPPORTED,\n  POP_STATE,\n  PUSH,\n  TYPEOF_FUNC,\n  TYPEOF_UNDEF,\n  VIRTUAL_PUSHSTATE,\n} from '../../constants';\nimport { getPath } from '../../utils/getPath';\nimport { trigger } from '../../utils/triggerEvent';\nimport collate from '../collate';\nimport callOnce from '../callOnce';\nimport RouterEvent from '../routerEvent';\n\n/**\n * Core router class to handle basic routing functionality\n */\nexport class RouterCore {\n  static get global() {\n    return typeof globalThis !== TYPEOF_UNDEF ? globalThis : global || self;\n  }\n  /**\n   * Router core constructor\n   * @typedef {import('./types').RouterCoreConfig} RouterCoreConfig\n   * @param {RouterCoreConfig} routerCoreConfig Route core configuration\n   */\n  constructor({ history, context, location, hash }) {\n    if (!history[PUSH]) {\n      throw new Error(HISTORY_UNSUPPORTED);\n    }\n    this.popStateSubscription = fromEvent(\n      RouterCore.global,\n      POP_STATE\n    ).subscribe((e) => {\n      const path = getPath(hash, location);\n      if (path) {\n        trigger(context, VIRTUAL_PUSHSTATE, [{ path, hash }, e, this]);\n      }\n    });\n    this.listeners = fromEvent(context, VIRTUAL_PUSHSTATE).pipe(\n      collate.apply(this)\n    );\n  }\n  /**\n   * Allows you to add operators for any pre-processing before a handler is called\n   * @typedef {import('./types').Operator} Operator\n   * @param  {...Operator} ops Operators\n   * @returns {Observable<any>}\n   */\n  pipe(...ops) {\n    return this.listeners.pipe(callOnce.apply(this), ...ops);\n  }\n  /**\n   * Attaches a route handler\n   * @param {(event: RouterEvent) => void} fn Route handler\n   */\n  subscribe(fn) {\n    return this.pipe().subscribe(fn);\n  }\n  /**\n   * Destroys current router instance\n   * @param {() => void} callback Callback for destroy function\n   */\n  destroy(callback) {\n    if (typeof callback === TYPEOF_FUNC) {\n      callback();\n    }\n    this.popStateSubscription.unsubscribe(); // Unsubscribe popstate event\n  }\n}\n","import isObject from 'is-object';\nimport set from '../set';\nimport { RouterCore } from './RouterCore';\n\n/**\n * Browser router to handle routing logic\n */\nexport class Router extends RouterCore {\n  /**\n   * Router constructor\n   * @typedef {import('./types').RouterConfig} RouterConfig\n   * @param {RouterConfig} config\n   */\n  constructor(config) {\n    config = isObject(config) ? config : {};\n    const { history, location, document } = RouterCore.global;\n    const context = document.body;\n    super({\n      history,\n      location,\n      context,\n      hash: config.hashRouting,\n    });\n    this.config = Object.freeze({\n      init: true,\n      hashRouting: false,\n      preservePath: false,\n      context,\n      history,\n      location,\n      ...config,\n    });\n    if (config.hashRouting && !location.hash) {\n      this.set('/', {\n        replace: true,\n        preventDefault: true, // Don't execute route handlers\n      });\n    }\n  }\n  /**\n   * Sets the current route path\n   * @typedef {import('../set/types').RouteConfig} RouteConfig\n   * @param {string} path Route path\n   * @param {RouteConfig} routeConfig Route config\n   */\n  set(path, routeConfig) {\n    set.apply(this, [path, routeConfig]);\n  }\n}\n"],"names":["POP_STATE","REG_ROUTE_PARAMS","REG_PATHNAME","HISTORY_UNSUPPORTED","INVALID_ROUTE","VIRTUAL_PUSHSTATE","QRY","EMPTY","UNDEF","TYPEOF_STR","TYPEOF_UNDEF","TYPEOF_FUNC","STATE","PUSH","REPLACE","resolveParams","expr","path","params","test","pathRegex","RegExp","replace","lastIndex","keys","Array","from","match","map","key","values","shift","forEach","index","trigger","context","eventType","data","dispatchEvent","CustomEvent","bubbles","cancelable","detail","trim","str","isValidRoute","route","set","routeStr","routeConfig","isObject","qs","split","preventDefault","queryString","pageTitle","preservePath","hashRouting","hash","history","config","savedState","state","idx","TypeError","getPath","isHash","location","substring","pathname","RouterEvent","constructor","routeInfo","currentEvent","routeObject","originalEvent","routerInstance","isHashRoute","router","query","search","collate","observable","Observable","subscriber","subn","subscribe","next","event","error","complete","unsubscribe","callOnce","isDone","init","RouterCore","global","globalThis","self","_ref","Error","popStateSubscription","fromEvent","e","listeners","pipe","apply","_len","arguments","length","ops","_key","fn","destroy","callback","Router","document","body","Object","freeze"],"mappings":";;AAAA;AACA;AACA;AACO,MAAMA,SAAS,GAAG,UAAU,CAAA;AAC5B,MAAMC,gBAAgB,GAAG,SAAS,CAAA;AAClC,MAAMC,YAAY,GAAG,cAAc,CAAA;AACnC,MAAMC,mBAAmB,GAC9B,+CAA+C,CAAA;AAC1C,MAAMC,aAAa,GAAG,4BAA4B,CAAA;AAClD,MAAMC,iBAAiB,GAAG,YAAY,CAAA;AACtC,MAAMC,GAAG,GAAG,GAAG,CAAA;AACf,MAAMC,KAAK,GAAG,EAAE,CAAA;AAChB,MAAMC,KAAK,GAAG,KAAK,CAAC,CAAA;AACpB,MAAMC,UAAU,GAAG,OAAOF,KAAK,CAAA;AAE/B,MAAMG,YAAY,GAAG,OAAOF,KAAK,CAAA;AACjC,MAAMG,WAAW,GAAG,QAAQ,MAAM,EAAE,CAAC,CAAA;AACrC,MAAMC,KAAK,GAAG,OAAO,CAAA;AACrB,MAAMC,IAAI,GAAI,CAAA,IAAA,EAAMD,KAAM,CAAC,CAAA,CAAA;AAC3B,MAAME,OAAO,GAAI,CAAA,OAAA,EAASF,KAAM,CAAC,CAAA;;ACjBxC;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,aAAaA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACxC,MAAMC,MAAM,GAAG,EAAE,CAAA;AACjB,EAAA,IAAIjB,gBAAgB,CAACkB,IAAI,CAACH,IAAI,CAAC,EAAE;IAC/B,MAAMI,SAAS,GAAG,IAAIC,MAAM,CAC1BL,IAAI,CAACM,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAACA,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAC7D,CAAA;IACDrB,gBAAgB,CAACsB,SAAS,GAAG,CAAC,CAAA;AAC9B,IAAA,IAAIH,SAAS,CAACD,IAAI,CAACF,IAAI,CAAC,EAAE;MACxB,MAAMO,IAAI,GAAGC,KAAK,CAACC,IAAI,CAACV,IAAI,CAACW,KAAK,CAAC1B,gBAAgB,CAAC,CAAC,CAAC2B,GAAG,CAAEC,GAAG,IAC5DA,GAAG,CAACP,OAAO,CAAC,GAAG,EAAEf,KAAK,CAAC,CACxB,CAAA;AACD,MAAA,MAAMuB,MAAM,GAAGL,KAAK,CAACC,IAAI,CAACT,IAAI,CAACU,KAAK,CAACP,SAAS,CAAC,CAAC,CAAA;MAChDU,MAAM,CAACC,KAAK,EAAE,CAAA;AACdP,MAAAA,IAAI,CAACQ,OAAO,CAAC,CAACH,GAAG,EAAEI,KAAK,KAAK;AAC3Bf,QAAAA,MAAM,CAACW,GAAG,CAAC,GAAGC,MAAM,CAACG,KAAK,CAAC,CAAA;AAC7B,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAA;AACA,EAAA,OAAOf,MAAM,CAAA;AACf;;ACzBA,IAAA,QAAc,GAAG,SAAS,QAAQ,CAAC,CAAC,EAAE;AACtC,CAAC,OAAO,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,KAAK,IAAI,CAAC;AAC5C,CAAC;;ACJD;AACA;AACA;AACA;AACA;AACA;AACO,SAASgB,OAAOA,CAACC,OAAO,EAAEC,SAAS,EAAEC,IAAI,EAAE;AAChDF,EAAAA,OAAO,CAACG,aAAa,CACnB,IAAIC,WAAW,CAACH,SAAS,EAAE;AACzBI,IAAAA,OAAO,EAAE,IAAI;AACbC,IAAAA,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAEL,IAAI,IAAI,EAAA;AAClB,GAAC,CAAC,CACH,CAAA;AACH;;ACZA;AACA;AACA;AACA;AACO,SAASM,IAAIA,CAACC,GAAG,EAAE;EACxB,OAAO,OAAOA,GAAG,KAAKnC,UAAU,GAAGmC,GAAG,CAACD,IAAI,EAAE,GAAGpC,KAAK,CAAA;AACvD,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASsC,YAAYA,CAACC,KAAK,EAAE;AAClC,EAAA,OAAO5C,YAAY,CAACiB,IAAI,CAAC2B,KAAK,CAAC,CAAA;AACjC;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASC,GAAGA,CAACC,QAAQ,EAAEC,WAAW,EAAE;EACjDA,WAAW,GAAGC,QAAQ,CAACD,WAAW,CAAC,GAAGA,WAAW,GAAG,EAAE,CAAA;EACtD,MAAM,CAACH,KAAK,EAAEK,EAAE,CAAC,GAAGH,QAAQ,CAACI,KAAK,CAAC9C,GAAG,CAAC,CAAA;EACvC,MAAM;AACJgB,IAAAA,OAAO,GAAG,KAAK;AACf+B,IAAAA,cAAc,GAAG,KAAK;AACtBC,IAAAA,WAAW,GAAGH,EAAE;IAChBd,IAAI;AACJkB,IAAAA,SAAS,GAAG,IAAA;AACd,GAAC,GAAGN,WAAW,CAAA;EACf,MAAM;IAAEO,YAAY;AAAEC,IAAAA,WAAW,EAAEC,IAAI;IAAEC,OAAO;AAAExB,IAAAA,OAAAA;GAAS,GAAG,IAAI,CAACyB,MAAM,CAAA;AACzE;AACAZ,EAAAA,QAAQ,GAAGL,IAAI,CAACG,KAAK,CAAC,CAAA;AACtB,EAAA,IAAID,YAAY,CAACG,QAAQ,CAAC,EAAE;IAC1B,MAAM/B,IAAI,GAAG+B,QAAQ,CAAA;AACrB,IAAA,IAAIU,IAAI,EAAE;MACRV,QAAQ,GAAI,GAAEQ,YAAY,GAAG,EAAE,GAAG,GAAI,CAAGR,CAAAA,EAAAA,QAAS,CAAC,CAAA,CAAA;AACrD,KAAA;AACA;AACAA,IAAAA,QAAQ,GAAI,CAAEA,EAAAA,QAAS,CAAEL,EAAAA,IAAI,CAC3BW,WAAW,GAAI,CAAEhD,EAAAA,GAAG,GAAGgD,WAAY,CAAA,CAAC,GAAG/C,KAAK,CAC5C,CAAC,CAAA,CAAA;AACH,IAAA,MAAMsD,UAAU,GAAGF,OAAO,CAACG,KAAK,IAAI;AAAEC,MAAAA,GAAG,EAAE,CAAA;KAAG,CAAA;AAC9CJ,IAAAA,OAAO,CAACrC,OAAO,GAAGR,OAAO,GAAGD,IAAI,CAAC,CAC/B;MACEwB,IAAI;AACJ0B,MAAAA,GAAG,EAAEF,UAAU,CAACE,GAAG,GAAG,CAAA;AACxB,KAAC,EACDR,SAAS,EACTP,QAAQ,CACT,CAAA;AACD,IAAA,IAAI,CAACK,cAAc,IAAIpC,IAAI,EAAE;AAC3BiB,MAAAA,OAAO,CAACC,OAAO,EAAE9B,iBAAiB,EAAE,CAClC;QACEY,IAAI;AACJyC,QAAAA,IAAAA;AACF,OAAC,EACDlD,KAAK,EACL,IAAI,CACL,CAAC,CAAA;AACJ,KAAA;AACF,GAAC,MAAM;AACL,IAAA,MAAM,IAAIwD,SAAS,CAAC5D,aAAa,CAAC,CAAA;AACpC,GAAA;AACF;;AC9DO,MAAM6D,OAAO,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;EAC3C,OAAOxB,IAAI,CACTuB,MAAM,GAAGC,QAAQ,CAACT,IAAI,CAACU,SAAS,CAAC,CAAC,CAAC,CAAChB,KAAK,CAAC9C,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG6D,QAAQ,CAACE,QAAQ,CACtE,CAAA;AACH,CAAC;;ACJD;AACA;AACA;AACe,MAAMC,WAAW,CAAC;AAC/B;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAWA,CAACC,SAAS,EAAEC,YAAY,EAAE;AACnC;IACA,MAAM,CAACC,WAAW,EAAEC,aAAa,EAAEC,cAAc,CAAC,GAAGJ,SAAS,CAAA;IAC9D,MAAM;MAAEL,QAAQ;AAAER,MAAAA,OAAAA;KAAS,GAAGiB,cAAc,CAAChB,MAAM,CAAA;AACnD,IAAA,IAAI,CAACd,KAAK,GAAG4B,WAAW,CAACzD,IAAI,CAAA;AAC7B,IAAA,IAAI,CAAC4D,WAAW,GAAGH,WAAW,CAAChB,IAAI,CAAA;IACnC,IAAI,CAACoB,MAAM,GAAGF,cAAc,CAAA;AAC5B,IAAA,IAAI,CAACH,YAAY,GAAGE,aAAa,IAAIF,YAAY,CAAA;IACjD,IAAI,CAACM,KAAK,GAAG;MACX9D,IAAI,EAAE0B,IAAI,CAACwB,QAAQ,CAACa,MAAM,CAACZ,SAAS,CAAC,CAAC,CAAC,CAAC;AACxCV,MAAAA,IAAI,EAAEf,IAAI,CAACwB,QAAQ,CAACT,IAAI,CAACN,KAAK,CAAC9C,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACvC,CAAA;IACD,MAAM;AAAEwD,MAAAA,KAAAA;AAAM,KAAC,GAAGa,aAAa,IAAI,EAAE,CAAA;IACrC,MAAM;MAAEtC,IAAI;AAAE0B,MAAAA,GAAG,GAAG,CAAA;KAAG,GAAGD,KAAK,IAAIH,OAAO,CAACG,KAAK,IAAI,EAAE,CAAA;IACtD,IAAI,CAACzB,IAAI,GAAGA,IAAI,CAAA;AAChB,IAAA,IAAI,CAACJ,KAAK,GAAG,CAAC8B,GAAG,CAAA;AACnB,GAAA;AACF;;AC3BA;AACA;AACA;AACA;AACe,SAASkB,OAAOA,GAAG;AAChC,EAAA,OAAQC,UAAU,IAChB,IAAIC,UAAU,CAAEC,UAAU,IAAK;AAC7B,IAAA,MAAMC,IAAI,GAAGH,UAAU,CAACI,SAAS,CAAC;MAChCC,IAAI,EAAGC,KAAK,IAAK;AACf,QAAA,MAAM,IAAKZ,cAAc,CAAC,GAAGY,KAAK,CAAC9C,MAAM,CAAA;QACzC,IAAIkC,cAAc,KAAK,IAAI,EAAE;AAC3BQ,UAAAA,UAAU,CAACG,IAAI,CAAC,IAAIjB,WAAW,CAACkB,KAAK,CAAC9C,MAAM,EAAE8C,KAAK,CAAC,CAAC,CAAA;AACvD,SAAA;OACD;MACDC,KAAK,EAAEL,UAAU,CAACK,KAAK;MACvBC,QAAQ,EAAEN,UAAU,CAACM,QAAAA;AACvB,KAAC,CAAC,CAAA;AACF,IAAA,OAAO,MAAM;MACXL,IAAI,CAACM,WAAW,EAAE,CAAA;KACnB,CAAA;AACH,GAAC,CAAC,CAAA;AACN;;ACnBA;AACA;AACA;AACA;AACA;AACe,SAASC,QAAQA,CAACC,MAAM,EAAE;EACvC,MAAM;AAAEpC,IAAAA,WAAW,EAAEC,IAAI;IAAES,QAAQ;AAAE2B,IAAAA,IAAAA;GAAM,GAAG,IAAI,CAAClC,MAAM,CAAA;AACzD,EAAA,MAAM3C,IAAI,GAAGgD,OAAO,CAACP,IAAI,EAAES,QAAQ,CAAC,CAAA;AACpC,EAAA,OAAQe,UAAU,IAChB,IAAIC,UAAU,CAAEC,UAAU,IAAK;AAC7B,IAAA,MAAMC,IAAI,GAAGH,UAAU,CAACI,SAAS,CAACF,UAAU,CAAC,CAAA;IAC7C,IAAI,CAACS,MAAM,EAAE;AACXA,MAAAA,MAAM,GAAG,IAAI,CAAA;MACb,IAAIC,IAAI,IAAI7E,IAAI,EAAE;AAChBmE,QAAAA,UAAU,CAACG,IAAI,CAAC,IAAIjB,WAAW,CAAC,CAAC;UAAErD,IAAI;AAAEyC,UAAAA,IAAAA;AAAK,SAAC,EAAElD,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;AACjE,OAAA;AACF,KAAA;AACA,IAAA,OAAO,MAAM;MACX6E,IAAI,CAACM,WAAW,EAAE,CAAA;KACnB,CAAA;AACH,GAAC,CAAC,CAAA;AACN;;ACXA;AACA;AACA;AACO,MAAMI,UAAU,CAAC;EACtB,WAAWC,MAAMA,GAAG;IAClB,OAAO,OAAOC,UAAU,KAAKvF,YAAY,GAAGuF,UAAU,GAAGD,MAAM,IAAIE,IAAI,CAAA;AACzE,GAAA;AACA;AACF;AACA;AACA;AACA;EACE3B,WAAWA,CAAA4B,IAAA,EAAuC;IAAA,IAAtC;MAAExC,OAAO;MAAExB,OAAO;MAAEgC,QAAQ;AAAET,MAAAA,IAAAA;AAAK,KAAC,GAAAyC,IAAA,CAAA;AAC9C,IAAA,IAAI,CAACxC,OAAO,CAAC9C,IAAI,CAAC,EAAE;AAClB,MAAA,MAAM,IAAIuF,KAAK,CAACjG,mBAAmB,CAAC,CAAA;AACtC,KAAA;AACA,IAAA,IAAI,CAACkG,oBAAoB,GAAGC,SAAS,CACnCP,UAAU,CAACC,MAAM,EACjBhG,SAAS,CACV,CAACsF,SAAS,CAAEiB,CAAC,IAAK;AACjB,MAAA,MAAMtF,IAAI,GAAGgD,OAAO,CAACP,IAAI,EAAES,QAAQ,CAAC,CAAA;AACpC,MAAA,IAAIlD,IAAI,EAAE;AACRiB,QAAAA,OAAO,CAACC,OAAO,EAAE9B,iBAAiB,EAAE,CAAC;UAAEY,IAAI;AAAEyC,UAAAA,IAAAA;AAAK,SAAC,EAAE6C,CAAC,EAAE,IAAI,CAAC,CAAC,CAAA;AAChE,OAAA;AACF,KAAC,CAAC,CAAA;AACF,IAAA,IAAI,CAACC,SAAS,GAAGF,SAAS,CAACnE,OAAO,EAAE9B,iBAAiB,CAAC,CAACoG,IAAI,CACzDxB,OAAO,CAACyB,KAAK,CAAC,IAAI,CAAC,CACpB,CAAA;AACH,GAAA;AACA;AACF;AACA;AACA;AACA;AACA;AACED,EAAAA,IAAIA,GAAS;AAAA,IAAA,KAAA,IAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAALC,GAAG,GAAArF,IAAAA,KAAA,CAAAkF,IAAA,GAAAI,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA,EAAA,EAAA;AAAHD,MAAAA,GAAG,CAAAC,IAAA,CAAAH,GAAAA,SAAA,CAAAG,IAAA,CAAA,CAAA;AAAA,KAAA;AACT,IAAA,OAAO,IAAI,CAACP,SAAS,CAACC,IAAI,CAACb,QAAQ,CAACc,KAAK,CAAC,IAAI,CAAC,EAAE,GAAGI,GAAG,CAAC,CAAA;AAC1D,GAAA;AACA;AACF;AACA;AACA;EACExB,SAASA,CAAC0B,EAAE,EAAE;IACZ,OAAO,IAAI,CAACP,IAAI,EAAE,CAACnB,SAAS,CAAC0B,EAAE,CAAC,CAAA;AAClC,GAAA;AACA;AACF;AACA;AACA;EACEC,OAAOA,CAACC,QAAQ,EAAE;AAChB,IAAA,IAAI,OAAOA,QAAQ,KAAKvG,WAAW,EAAE;AACnCuG,MAAAA,QAAQ,EAAE,CAAA;AACZ,KAAA;AACA,IAAA,IAAI,CAACb,oBAAoB,CAACV,WAAW,EAAE,CAAC;AAC1C,GAAA;AACF;;AClEA;AACA;AACA;AACO,MAAMwB,MAAM,SAASpB,UAAU,CAAC;AACrC;AACF;AACA;AACA;AACA;EACExB,WAAWA,CAACX,MAAM,EAAE;IAClBA,MAAM,GAAGV,QAAQ,CAACU,MAAM,CAAC,GAAGA,MAAM,GAAG,EAAE,CAAA;IACvC,MAAM;MAAED,OAAO;MAAEQ,QAAQ;AAAEiD,MAAAA,QAAAA;KAAU,GAAGrB,UAAU,CAACC,MAAM,CAAA;AACzD,IAAA,MAAM7D,OAAO,GAAGiF,QAAQ,CAACC,IAAI,CAAA;AAC7B,IAAA,KAAK,CAAC;MACJ1D,OAAO;MACPQ,QAAQ;MACRhC,OAAO;MACPuB,IAAI,EAAEE,MAAM,CAACH,WAAAA;AACf,KAAC,CAAC,CAAA;AACF,IAAA,IAAI,CAACG,MAAM,GAAG0D,MAAM,CAACC,MAAM,CAAC;AAC1BzB,MAAAA,IAAI,EAAE,IAAI;AACVrC,MAAAA,WAAW,EAAE,KAAK;AAClBD,MAAAA,YAAY,EAAE,KAAK;MACnBrB,OAAO;MACPwB,OAAO;MACPQ,QAAQ;MACR,GAAGP,MAAAA;AACL,KAAC,CAAC,CAAA;IACF,IAAIA,MAAM,CAACH,WAAW,IAAI,CAACU,QAAQ,CAACT,IAAI,EAAE;AACxC,MAAA,IAAI,CAACX,GAAG,CAAC,GAAG,EAAE;AACZzB,QAAAA,OAAO,EAAE,IAAI;QACb+B,cAAc,EAAE,IAAI;AACtB,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAA;AACA;AACF;AACA;AACA;AACA;AACA;AACEN,EAAAA,GAAGA,CAAC9B,IAAI,EAAEgC,WAAW,EAAE;IACrBF,GAAG,CAAC2D,KAAK,CAAC,IAAI,EAAE,CAACzF,IAAI,EAAEgC,WAAW,CAAC,CAAC,CAAA;AACtC,GAAA;AACF;;;;"}