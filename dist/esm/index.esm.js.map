{"version":3,"file":"index.esm.js","sources":["../../src/js/utils/constants.js","../../src/js/utils/utils.js","../../src/js/utils/vars.js","../../src/js/utils/params.js","../../src/js/utils/query.js","../../src/js/utils/deparam.js","../../src/js/utils/assign.js","../../src/js/store/compression/compress.js","../../src/js/store/compression/decompress.js","../../src/js/store/compression/utf16.js","../../src/js/store/storage/index.js","../../src/js/store/index.js","../../src/js/utils/libs.js","../../src/js/api/resolveQuery/index.js","../../src/js/api/getQueryParams/index.js","../../src/js/api/testRoute/index.js","../../src/js/api/trigger/index.js","../../src/js/api/triggerRoute/index.js","../../src/js/api/execRoute/index.js","../../src/js/api/bindRoute/index.js","../../src/js/api/unbindRoute/index.js","../../src/js/api/initRouterEvents/index.js","../../src/js/api/includesRoute/index.js","../../src/js/silkrouter.js"],"sourcesContent":["/**\n * Router constants\n */\nexport const HASH_CHANGE = 'hashchange';\nexport const POP_STATE = 'popstate';\nexport const ROUTE_CHANGED = 'route.changed';\nexport const REG_ROUTE_PARAMS = /:[^\\/]+/g;\nexport const REG_PATHNAME = /^\\/(?=[^?]*)/;\nexport const REG_HASH_QUERY = /\\?.+/;\nexport const INVALID_ROUTE = 'Route string is not a pure route';\nexport const INVALID_LIST = 'Provide a valid list of routes';\nexport const CASE_INSENSITIVE_FLAG = '$$';\nexport const LOCAL_ENV = ['localhost', '0.0.0.0', '127.0.0.1', null];","import { REG_PATHNAME } from './constants';\n\n/**\n * Shorthand for Array.isArray\n */\nexport const isArr = Array.isArray;\n\n/**\n * Safely trims string\n * @param {string} str String\n */\nexport function trim(str) {\n    return ((typeof str === 'string') ? str.trim() : '');\n}\n\n/**\n * Checks if input is a number\n * @param {*} key \n */\nexport function isNumber(key) {\n    key = trim(`${key}`);\n    if (['null', 'undefined', ''].indexOf(key) > -1) return false;\n    return !isNaN(+key);\n}\n\n/**\n * Checks if value is an object\n * @param {*} value Any type of value\n */\nexport function isObject(value) {\n    return value && typeof value === 'object';\n}\n\n/**\n * Checks if key is a true object\n * @param {*} value Any type of value\n */\nexport function isPureObject(value) {\n    return isObject(value) && !isArr(value);\n}\n\n/**\n * Sets default value\n * @param {*} value Any value\n * @param {*} defaultValue Default value if value is undefined\n */\nexport function def(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\n\n/**\n * Converts array like object to array\n * @param {any[]} arr Arraylike object\n */\nexport function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n}\n\n/**\n * Checks if given route is valid\n * @private\n * @param {string} route Route string\n */\nexport function isValidRoute(route) {\n    return (typeof route === 'string' && REG_PATHNAME.test(route));\n}\n\n/**\n * Checks if the URL is a hash URL\n * @private\n * @param {string} URL URL string\n */\nexport function isHashURL(URL) {\n    return typeof URL === 'string' && URL.charAt(0) === '#';\n}\n\n/**\n * Checks if input value is a function\n * @param {function} fn Input function\n */\nexport function isFunc(fn) {\n    return typeof fn === 'function';\n}\n\n/**\n * Returns an empty PopStateEvent object\n * @param {string} type Type of event\n * @param {*} data Any type of data\n */\nexport function getPopStateEvent(type, data) {\n    return {\n        type,\n        state: { data }\n    };\n}\n\n/**\n * Safely returns object keys\n * @param {object} obj Object\n */\nexport function keys(obj) {\n    return obj ? Object.keys(obj) : [];\n}\n\n/**\n * Checks if key is present in provided object\n * @param {object} ob Object\n * @param {*} key Key\n */\nexport function hasOwn(ob, key) {\n    return Object.prototype.hasOwnProperty.call(ob, key);\n}\n\n/**\n * Loops over an array like object\n * @param {object} arrayObj Array or array like object\n * @param {function} callback Callback function\n */\nexport function each(arrayObj, callback) {\n    if (arrayObj && arrayObj.length) {\n        for (let index = 0; index < arrayObj.length; index += 1) {\n            if (typeof callback === 'function') {\n                const continueTheLoop = callback.apply(arrayObj, [arrayObj[index], index]);\n                if (typeof continueTheLoop === 'boolean') {\n                    if (continueTheLoop) {\n                        continue;\n                    } else {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n}","export const loc = window.location;\nexport const f = String.fromCharCode;\n","import { REG_ROUTE_PARAMS } from './constants';\nimport { toArray, def } from './utils';\nimport { loc } from './vars';\n\n/**\n * Parses current path and returns params object\n * @private\n * @param {string} expr Route expression\n * @param {string} path URL path\n * @returns {object}\n */\nexport function extractParams(expr, path) {\n    path = def(path, loc.pathname);\n    const params = {};\n    if (REG_ROUTE_PARAMS.test(expr)) {\n        const pathRegex = new RegExp(expr.replace(/\\//g, \"\\\\/\").replace(/:[^\\/\\\\]+/g, \"([^\\\\/]+)\"));\n        REG_ROUTE_PARAMS.lastIndex = 0;\n        if (pathRegex.test(path)) {\n            const keys = toArray(expr.match(REG_ROUTE_PARAMS)).map(key => key.replace(':', ''));\n            const values = toArray(path.match(pathRegex));\n            values.shift();\n            keys.forEach((key, index) => {\n                params[key] = values[index];\n            });\n        }\n    }\n    return params;\n}","import { isArr, keys, isObject } from './utils';\n\n/**\n * Builds query string recursively\n * @private\n * @param {string[]} qsList List of query string key value pairs\n * @param {*} key Key\n * @param {*} obj Value\n */\nfunction buildQuery(qsList, key, obj) {\n    if (isObject(obj)) {\n        keys(obj).forEach(obKey => {\n            buildQuery(qsList, `${key}[${isArr(obj) ? '' : obKey}]`, obj[obKey]);\n        });\n    } else if (typeof obj !== 'function') {\n        qsList.push(`${encodeURIComponent(key)}=${encodeURIComponent(obj)}`);\n    }\n}\n\n/**\n * Converts an object to a query string\n * @private\n * @param {object} obj Object which should be converted to a string\n * @returns {string}\n */\nexport function toQueryString(obj) {\n    let qsList = [];\n    if (isObject(obj)) {\n        keys(obj).forEach(key => {\n            buildQuery(qsList, key, obj[key]);\n        });\n        return qsList.join('&');\n    }\n    return typeof obj === 'string' ? obj : '';\n}","import { loc } from './vars';\nimport { isArr, trim, isNumber, isPureObject, def } from './utils';\n\n/**\n * Checks if query parameter key is a complex notation\n * @param {string} q \n */\nfunction ifComplex(q) {\n    return (/\\[/.test(q));\n}\n\n/**\n * Converts query string to JavaScript object\n * @param {string} qs query string argument (defaults to url query string)\n */\nfunction deparam(qs, coerce) {\n    qs = trim(def(qs, loc.search));\n    if (qs.charAt(0) === '?') {\n        qs = qs.replace('?', '');\n    }\n    const queryObject = {};\n    if (qs) {\n        qs.split('&').forEach((qq) => {\n            const qArr = qq.split('=').map(part => decodeURIComponent(part));\n            (ifComplex(qArr[0]) ? complex : simple).apply(this, [].concat(qArr, [queryObject, def(coerce, false), false]));\n        });\n    }\n    return queryObject;\n}\n\n/**\n * Converts an array to an object\n * @param {array} arr \n */\nfunction toObject(arr) {\n    var convertedObj = {};\n    if (isArr(arr)) {\n        arr.forEach((value, index) => {\n            convertedObj[index] = value;\n        });\n    }\n    return convertedObj;\n}\n\n/**\n * Resolves an array to object if required\n * @param {array} ob An array object\n * @param {boolean} isNumber flag to test if next key is number\n */\nfunction resolve(ob, isNextNumber) {\n    return isNextNumber ? (typeof ob === 'undefined' ? [] : ob) : toObject(ob);\n}\n\n/**\n * Resolves the target object for next iteration\n * @param {Object} ob current reference object\n * @param {string} nextProp reference property in current object\n */\nfunction resolveObj(ob, nextProp) {\n    if (isPureObject(ob)) return { ob };\n    if (isArr(ob) || typeof ob === 'undefined') return { ob: resolve(ob, isNumber(nextProp)) };\n    return { ob: [ob], push: ob !== null };\n}\n\n/**\n * Handles complex query parameters\n * @param {string} key \n * @param {string} value \n * @param {Object} obj \n */\nfunction complex(key, value, obj, coercion) {\n    coercion = def(coercion, true);\n    const match = key.match(/([^\\[]+)\\[([^\\[]*)\\]/) || [];\n    if (match.length === 3) {\n        const prop = match[1];\n        let nextProp = match[2];\n        key = key.replace(/\\[([^\\[]*)\\]/, '');\n        if (ifComplex(key)) {\n            if (nextProp === '') nextProp = '0';\n            key = key.replace(/[^\\[]+/, nextProp);\n            complex(key, value, (obj[prop] = resolveObj(obj[prop], nextProp).ob), coercion);\n        } else if (nextProp) {\n            const resolved = resolveObj(obj[prop], nextProp);\n            obj[prop] = resolved.ob;\n            const coercedValue = coercion ? coerce(value) : value;\n            if (resolved.push) {\n                const tempObj = {};\n                tempObj[nextProp] = coercedValue;\n                obj[prop].push(tempObj);\n            } else {\n                obj[prop][nextProp] = coercedValue;\n            }\n        } else {\n            simple(prop, value, obj, coercion, true);\n        }\n    }\n}\n\n/**\n * Handles simple query\n * @param {array} qArr \n * @param {Object} queryObject \n * @param {boolean} toArray \n */\nfunction simple(key, value, queryObject, coercion, toArray) {\n    if (def(coercion, true)) {\n        value = coerce(value);\n    }\n    if (key in queryObject) {\n        queryObject[key] = isArr(queryObject[key]) ? queryObject[key] : [queryObject[key]];\n        queryObject[key].push(value);\n    } else {\n        queryObject[key] = toArray ? [value] : value;\n    }\n}\n\n/**\n * Restores values to their original type\n * @param {string} value undefined or string value\n */\nfunction coerce(value) {\n    if (value == null) return '';\n    if (typeof value !== 'string') return value;\n    if (isNumber(value = trim(value))) return +value;\n    switch (value) {\n        case 'null': return null;\n        case 'undefined': return undefined;\n        case 'true': return true;\n        case 'false': return false;\n        case 'NaN': return NaN;\n        default: return value;\n    }\n}\n\n// Library encapsulation\nfunction lib() {\n    return deparam.apply(this, arguments);\n}\n\nexport { lib as deparam };","import { keys, isObject } from './utils';\n\n/**\n * Inner loop function for assign\n * @private\n * @param {object} ref Argument object\n * @param {object} target First object\n */\nfunction loopFunc(ref, target) {\n    if (isObject(ref)) {\n        keys(ref).forEach(function (key) {\n            target[key] = ref[key];\n        });\n    }\n}\n\n/**\n * Polyfill for Object.assign only smaller and with less features\n * @private\n * @returns {object}\n */\nexport function assign() {\n    const target = isObject(arguments[0]) ? arguments[0] : {};\n    for (let i = 1; i < arguments.length; i++) {\n        loopFunc(arguments[i], target);\n    }\n    return target;\n}","import { hasOwn } from '../../utils/utils';\n\nfunction _update(context, bitsPerChar, getCharFromInt) {\n    if (context.context_data_position == bitsPerChar - 1) {\n        context.context_data_position = 0;\n        context.context_data.push(getCharFromInt(context.context_data_val));\n        context.context_data_val = 0;\n    } else {\n        context.context_data_position++;\n    }\n}\n\nfunction _updateContextNumBits(context) {\n    context.context_enlargeIn--;\n    if (context.context_enlargeIn == 0) {\n        context.context_enlargeIn = 2 ** context.context_numBits;\n        context.context_numBits++;\n    }\n}\n\nfunction _updateContext(context, bitsPerChar, getCharFromInt) {\n    if (hasOwn(context.context_dictionaryToCreate, context.context_w)) {\n        if (context.context_w.charCodeAt(0) < 256) {\n            for (let i = 0; i < context.context_numBits; i++) {\n                context.context_data_val = (context.context_data_val << 1);\n                _update(context, bitsPerChar, getCharFromInt);\n            }\n            context.value = context.context_w.charCodeAt(0);\n            for (let i = 0; i < 8; i++) {\n                context.context_data_val = (context.context_data_val << 1) | (context.value & 1);\n                _update(context, bitsPerChar, getCharFromInt);\n                context.value = context.value >> 1;\n            }\n        } else {\n            context.value = 1;\n            for (let i = 0; i < context.context_numBits; i++) {\n                context.context_data_val = (context.context_data_val << 1) | context.value;\n                _update(context, bitsPerChar, getCharFromInt);\n                context.value = 0;\n            }\n            context.value = context.context_w.charCodeAt(0);\n            for (let i = 0; i < 16; i++) {\n                context.context_data_val = (context.context_data_val << 1) | (context.value & 1);\n                _update(context, bitsPerChar, getCharFromInt);\n                context.value = context.value >> 1;\n            }\n        }\n        _updateContextNumBits(context);\n        delete context.context_dictionaryToCreate[context.context_w];\n    } else {\n        context.value = context.context_dictionary[context.context_w];\n        for (let i = 0; i < context.context_numBits; i++) {\n            context.context_data_val = (context.context_data_val << 1) | (context.value & 1);\n            _update(context, bitsPerChar, getCharFromInt);\n            context.value = context.value >> 1;\n        }\n    }\n    _updateContextNumBits(context);\n}\n\nfunction compress(uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return '';\n    const context = {\n        context_dictionary: {},\n        context_dictionaryToCreate: {},\n        context_data: [],\n        context_c: \"\",\n        context_wc: \"\",\n        context_w: \"\",\n        context_enlargeIn: 2,\n        context_dictSize: 3,\n        context_numBits: 2,\n        context_data_val: 0,\n        context_data_position: 0\n    };\n    let i = 0;\n    for (let ii = 0; ii < uncompressed.length; ii += 1) {\n        context.context_c = uncompressed.charAt(ii);\n        if (!hasOwn(context.context_dictionary, context.context_c)) {\n            context.context_dictionary[context.context_c] = context.context_dictSize++;\n            context.context_dictionaryToCreate[context.context_c] = true;\n        }\n        context.context_wc = context.context_w + context.context_c;\n        if (hasOwn(context.context_dictionary, context.context_wc)) {\n            context.context_w = context.context_wc;\n        } else {\n            _updateContext(context, bitsPerChar, getCharFromInt);\n            context.context_dictionary[context.context_wc] = context.context_dictSize++;\n            context.context_w = String(context.context_c);\n        }\n    }\n    if (context.context_w !== \"\") {\n        _updateContext(context, bitsPerChar, getCharFromInt);\n    }\n    context.value = 2;\n    for (i = 0; i < context.context_numBits; i++) {\n        context.context_data_val = (context.context_data_val << 1) | (context.value & 1);\n        _update(context, bitsPerChar, getCharFromInt);\n        context.value = context.value >> 1;\n    }\n    // Flush the last char\n    while (true) {\n        context.context_data_val = (context.context_data_val << 1);\n        if (context.context_data_position == bitsPerChar - 1) {\n            context.context_data.push(getCharFromInt(context.context_data_val));\n            break;\n        }\n        else context.context_data_position++;\n    }\n    return context.context_data.join('');\n}\n\nexport default compress;","import { f } from '../../utils/vars';\n\nfunction _commonRep3(data, maxpower, resetValue, getNextValue) {\n    let bits = 0;\n    let power = 1;\n    while (power !== maxpower) {\n        const resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position === 0) {\n            data.position = resetValue;\n            data.val = getNextValue(data.index++);\n        }\n        bits |= (resb > 0 ? 1 : 0) * power;\n        power <<= 1;\n    }\n    return bits;\n}\n\nfunction decompress(length, resetValue, getNextValue) {\n    const dictionary = [];\n    const data = {\n        val: getNextValue(0),\n        position: resetValue,\n        index: 1\n    };\n    const result = [];\n    let enlargeIn = 4;\n    let dictSize = 4;\n    let numBits = 3;\n    let entry = '';\n    let w;\n    let c;\n    for (let i = 0; i < 3; i++) {\n        dictionary[i] = i;\n    }\n    switch (_commonRep3(data, Math.pow(2, 2), resetValue, getNextValue)) {\n        case 0:\n            c = f(_commonRep3(data, Math.pow(2, 8), resetValue, getNextValue));\n            break;\n        case 1:\n            c = f(_commonRep3(data, Math.pow(2, 16), resetValue, getNextValue));\n            break;\n        case 2:\n            return '';\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n        if (data.index > length) {\n            return '';\n        }\n        switch (c = _commonRep3(data, Math.pow(2, numBits), resetValue, getNextValue)) {\n            case 0:\n                dictionary[dictSize++] = f(_commonRep3(data, Math.pow(2, 8), resetValue, getNextValue));\n                c = dictSize - 1;\n                enlargeIn--;\n                break;\n            case 1:\n                dictionary[dictSize++] = f(_commonRep3(data, Math.pow(2, 16), resetValue, getNextValue));\n                c = dictSize - 1;\n                enlargeIn--;\n                break;\n            case 2:\n                return result.join('');\n        }\n        if (enlargeIn === 0) {\n            enlargeIn = Math.pow(2, numBits);\n            numBits++;\n        }\n        if (dictionary[c]) {\n            entry = dictionary[c];\n        } else {\n            if (c === dictSize) {\n                entry = w + w.charAt(0);\n            } else {\n                return null;\n            }\n        }\n        result.push(entry);\n        dictionary[dictSize++] = w + entry.charAt(0);\n        enlargeIn--;\n        w = entry;\n        if (enlargeIn === 0) {\n            enlargeIn = Math.pow(2, numBits);\n            numBits++;\n        }\n    }\n}\n\nexport default decompress;","import compress from './compress';\nimport decompress from './decompress';\nimport { f } from '../../utils/vars';\n\nexport function toUTF16(input) {\n    if (input == null) return '';\n    return compress(input, 15, (a) => f(a + 32)) + ' ';\n}\n\nexport function fromUTF16(compressed) {\n    if (compressed == null) return '';\n    if (compressed === '') return null;\n    return decompress(compressed.length, 16384, (index) => (compressed.charCodeAt(index) - 32));\n}","import { trim, each, isObject } from '../../utils/utils';\nimport { loc } from '../../utils/vars';\nimport { LOCAL_ENV } from '../../utils/constants';\nimport { toUTF16, fromUTF16 } from '../compression/utf16';\n\n/**\n * Sets user cookie\n * @param {string} key name of cookie\n * @param {string} value cookie value\n * @param {string} exp cookie expiry\n * @param {string} path url path\n * @param {string} domain supported domain\n * @param {boolean} isSecure Sets security flag\n */\nfunction setCookie(key, value) {\n    if (key && typeof value !== 'undefined') {\n        const domain = loc.hostname;\n        const isSecure = loc.protocol === 'https:';\n        let transformedValue = value;\n        if (isObject(value)) {\n            transformedValue = JSON.stringify(value);\n        }\n        const cookiePath = `; path=/`;\n        const cookieDomain = (LOCAL_ENV.indexOf(domain) === -1) ? `; domain=${trim(domain)}` : '';\n        const secureFlag = isSecure ? '; secure' : '';\n        document.cookie = `${key} = ${transformedValue}${cookieDomain}${cookiePath}${secureFlag}`;\n    }\n}\n\n/**\n * Get's cookie value\n * @param {string} key Key\n * @param {boolean} trimResult Flag to trim the value\n */\nfunction getCookie(key) {\n    if (key) {\n        const cookieStr = decodeURIComponent(document.cookie);\n        let value = '';\n        each(cookieStr.split(';'), cookiePair => {\n            const keyPart = `${key}=`;\n            const indexOfKey = cookiePair.indexOf(keyPart);\n            if (indexOfKey > -1) {\n                value = trim(cookiePair.substring((indexOfKey + keyPart.length), cookiePair.length));\n                return false;\n            }\n        });\n        return value;\n    }\n    return '';\n}\n\n/**\n * Returns true if local storage is accessible\n */\nfunction isStorageAvailable() {\n    try {\n        sessionStorage.setItem('testKey', 'testValue');\n        sessionStorage.removeItem('testKey');\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function set(key, value) {\n    if (isStorageAvailable()) {\n        return sessionStorage.setItem(key, toUTF16(isObject(value) ? JSON.stringify(value) : value));\n    }\n    return setCookie(key, value);\n}\n\nexport function get(key) {\n    if (isStorageAvailable()) {\n        let value = fromUTF16(sessionStorage.getItem(key));\n        try {\n            value = JSON.parse(value);\n            return value;\n        } catch (e) {\n            return value;\n        }\n    }\n    return getCookie(key);\n}","import { get, set } from './storage';\n\nexport const store = {\n    set() {\n        return set.apply(this, arguments);\n    },\n    get() {\n        return get.apply(this, arguments);\n    }\n};","import { assign } from './assign';\nimport { isPureObject, keys } from './utils';\nimport { store } from '../store';\n\nfunction Libs() {\n    this.handlers = [];\n}\nassign(Libs.prototype, {\n    getDataFromStore(path, isHash) {\n        const paths = assign(store.get('routeStore'));\n        return paths[`${isHash ? '#' : ''}${path}`];\n    },\n    setDataToStore(path, isHash, data) {\n        let paths = assign(store.get('routeStore'));\n        if (paths[path]) {\n            if (\n                !data\n                || (\n                    isPureObject(data)\n                    && keys(data).length === 0\n                )\n            ) { return false; }\n        }\n        const newPath = {};\n        newPath[`${isHash ? '#' : ''}${path}`] = data;\n        paths = assign({}, paths, newPath);\n        return store.set('routeStore', paths);\n    },\n    contains(fn) {\n        return !!this.handlers.filter(fn).length;\n    },\n    remove(item) {\n        this.handlers.splice(this.handlers.indexOf(item), 1).length;\n    }\n});\n\nexport const libs = new Libs();","import { loc } from '../../utils/vars';\nimport { trim } from '../../utils/utils';\n\n/**\n * Adds a query string\n * @private\n * @param {string} route Route string\n * @param {string} qString Query string\n * @param {boolean} appendQString Append query string flag\n */\nexport default function resolveQuery(route, isHash, queryString, append) {\n    queryString = trim(queryString.substring(+(queryString.charAt(0) === '?')));\n    const search = (append || '') && loc.search;\n    if (!isHash) {\n        return `${route}${search}${queryString ? `${search ? '&' : '?'}${queryString}` : ''}`;\n    }\n    return `${loc.pathname}${search}#${route}${queryString ? `?${queryString}` : ''}`;\n}","import { deparam } from '../../utils/deparam';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\nimport { REG_HASH_QUERY } from '../../utils/constants';\n\n/**\n * Converts current query string into an object\n * @private\n */\nexport default function getQueryParams() {\n    const hashQuery = loc.hash.match(REG_HASH_QUERY);\n    return assign({}, deparam(), (\n        hashQuery\n            ? assign({}, deparam(hashQuery[0]))\n            : {}\n    ));\n}","import { libs } from '../../utils/libs';\nimport { extractParams } from '../../utils/params';\nimport { isValidRoute, isHashURL, keys } from '../../utils/utils';\nimport { assign } from '../../utils/assign';\n\n/**\n * Compares route with current URL\n * @private\n * @param {string} route Route string\n * @param {string} url Current url\n * @param {object} params Parameters\n */\nexport default function testRoute(route, url, originalData) {\n    const isHash = isHashURL(url);\n    url = url.substring(+isHash);\n    const path = url.split('?')[0];\n    originalData = assign(originalData);\n    if (keys(originalData).length) {\n        libs.setDataToStore(path, isHash, originalData);\n    }\n    const params = extractParams(route, url);\n    return {\n        hasMatch: keys(params).length > 0 || (\n            isValidRoute(url) && ((route === url) || (route === '*'))\n        ),\n        data: libs.getDataFromStore(path, isHash),\n        params\n    };\n}","import { loc } from '../../utils/vars';\nimport { libs } from '../../utils/libs';\nimport getQueryParams from '../getQueryParams';\nimport testRoute from '../testRoute';\nimport { assign } from '../../utils/assign';\n\n/**\n * Triggers a router event\n * @private\n * @param {string} eventName Name of route event\n * @param {object} params Parameters\n */\nexport default function execListeners(eventName, rc, originalData) {\n    originalData = assign(originalData);\n    libs.handlers.forEach(ob => {\n        if (ob.eventName === eventName) {\n            const currentPath = loc[rc.hash ? 'hash' : 'pathname'];\n            const tr = testRoute(\n                (ob.isCaseInsensitive ? ob.route.toLowerCase() : ob.route),\n                (ob.isCaseInsensitive ? currentPath.toLowerCase() : currentPath),\n                originalData\n            );\n            if (tr.hasMatch && (!ob.hash || (ob.hash && rc.hash))) {\n                ob.handler(assign({}, rc, {\n                    data: tr.data,\n                    params: tr.params,\n                    query: getQueryParams()\n                }));\n            }\n        }\n    });\n}","import { ROUTE_CHANGED, HASH_CHANGE, POP_STATE } from '../../utils/constants';\nimport trigger from '../trigger';\nimport { def, getPopStateEvent } from '../../utils/utils';\n\n/**\n * Triggers \"route.changed\" event\n * @private\n * @param {object} config Route event configuration\n * @param {object} config.originalEvent Original \"popstate\" event object\n * @param {string} config.route route string\n * @param {string} config.type Type of event\n * @param {boolean} config.hash Flag that determines type of event expected\n * @param {object} config.originalData Original data persisted by history API\n */\nexport default function triggerRoute(ob) {\n    ob.type = ob.hash ? HASH_CHANGE : POP_STATE;\n    const originalData = def(ob.originalData, {});\n    ob.originalEvent = def(ob.originalEvent, getPopStateEvent(ob.type, originalData));\n    delete ob.originalData;\n    trigger(\n        ROUTE_CHANGED,\n        ob,\n        originalData\n    );\n}","import { assign } from '../../utils/assign';\nimport { trim, isValidRoute, isHashURL } from '../../utils/utils';\nimport { toQueryString } from '../../utils/query';\nimport { libs } from '../../utils/libs';\nimport resolveQuery from '../resolveQuery';\nimport triggerRoute from '../triggerRoute';\nimport { INVALID_ROUTE } from '../../utils/constants';\n\n/**\n * Set route for given view\n * @private\n * @param {string|object} oRoute Route string or object\n * @param {boolean} replaceMode Replace mode\n * @param {boolean} noTrigger Do not trigger handler\n */\nexport default function execRoute(route, replaceMode, noTrigger) {\n    let ro = assign(\n        { replaceMode, noTrigger },\n        (\n            typeof route === 'string'\n                ? { route }\n                : route\n        )\n    );\n    if (typeof ro.route === 'string') {\n        const hash = isHashURL(ro.route);\n        const routeParts = trim(ro.route).split('?');\n        const pureRoute = routeParts[0].substring(+hash);\n        const queryString = toQueryString(trim(routeParts[1]) || trim(ro.queryString));\n        if (isValidRoute(pureRoute)) {\n            libs.setDataToStore(pureRoute, hash, ro.data);\n            const completeRoute = resolveQuery(pureRoute, hash, queryString, ro.appendQuery);\n            history[ro.replaceMode ? 'replaceState' : 'pushState']({ data: ro.data }, ro.title, completeRoute);\n            if (!ro.noTrigger) {\n                triggerRoute({\n                    route: `${hash ? '#' : ''}${pureRoute}`,\n                    hash\n                });\n            }\n        } else {\n            throw new TypeError(INVALID_ROUTE);\n        }\n    }\n}\n","import { isArr, trim, isHashURL, isFunc, getPopStateEvent } from '../../utils/utils';\nimport { CASE_INSENSITIVE_FLAG, ROUTE_CHANGED, POP_STATE, HASH_CHANGE } from '../../utils/constants';\nimport { libs } from '../../utils/libs';\nimport { loc } from '../../utils/vars';\nimport testRoute from '../testRoute';\nimport getQueryParams from '../getQueryParams';\n\n/**\n * Binds generic route if route is passed as a list of URLs\n * @private\n * @param {string[]} route Array of routes\n * @param {*} handler Handler function\n */\nfunction bindGenericRoute(route, handler) {\n    if (!libs.contains(ob => (ob.prevHandler === handler))) {\n        bindRoute((e) => {\n            if (isFunc(handler) && route.indexOf(`${e.hash ? '#' : ''}${e.route.substring(+e.hash)}`) > -1) {\n                handler.apply(this, [e]);\n            }\n        }, handler);\n    }\n}\n\n/**\n * Attaches a route handler function\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function bindRoute(route, handler, prevHandler) {\n    // Resolve generic route\n    let isCaseInsensitive = typeof route === 'string' && route.indexOf(CASE_INSENSITIVE_FLAG) === 0;\n    if (isFunc(route)) {\n        prevHandler = handler;\n        handler = route;\n        route = '*';\n    }\n    if (isArr(route)) {\n        return bindGenericRoute(route, handler);\n    }\n    route = route.substring(isCaseInsensitive ? CASE_INSENSITIVE_FLAG.length : 0);\n    const containsHash = isHashURL(route);\n    route = route.substring(+containsHash);\n    // Attach handler\n    if (\n        !libs.contains(ob => (ob.handler === handler && ob.route === route))\n        && isFunc(handler)\n    ) {\n        libs.handlers.push({\n            eventName: ROUTE_CHANGED,\n            handler,\n            prevHandler,\n            route,\n            hash: containsHash,\n            isCaseInsensitive\n        });\n    }\n    // Execute handler if matches current route (Replaces init method in version 2.0)\n    const paths = containsHash ? [loc.hash] : [loc.pathname, loc.hash];\n    paths.filter(path => trim(path)).forEach(currentPath => {\n        const containsHash = isHashURL(currentPath);\n        const tr = testRoute(\n            (isCaseInsensitive ? route.toLowerCase() : route),\n            (isCaseInsensitive ? currentPath.toLowerCase() : currentPath)\n        );\n        if (tr.hasMatch && isFunc(handler)) {\n            const eventName = containsHash ? HASH_CHANGE : POP_STATE;\n            handler({\n                originalEvent: getPopStateEvent(eventName, tr.data),\n                route: currentPath,\n                hash: containsHash,\n                eventName,\n                data: tr.data,\n                params: tr.params,\n                query: getQueryParams(),\n                isCaseInsensitive\n            });\n        }\n    });\n}\n","import { libs } from '../../utils/libs';\nimport { isArr, isFunc, toArray } from '../../utils/utils';\n\n/**\n * Unbinds route handlers\n * @private\n * @param {string} route Route string\n * @param {function} handler Callback function\n */\nexport default function unbindRoute(route, handler) {\n    const prevLength = libs.handlers.length;\n    let isRouteList = isArr(route);\n    if (isRouteList && !handler) return 0; // Fix for accidently removing all generic routes if there is no handler for list route\n    const args = toArray(arguments);\n    if (args.length === 0) {\n        libs.handlers.length = 0;\n        return prevLength;\n    }\n    route = isRouteList ? '*' : route;\n    libs.handlers.forEach(ob => {\n        let test = ob.route === route;\n        const singleArg = args.length === 1;\n        if (!(singleArg && typeof route === 'string' && !isRouteList)) {\n            if (singleArg && isFunc(route)) {\n                handler = route;\n                route = '*';\n            }\n            test = test && (\n                ob.handler === handler\n                || ob.prevHandler === handler\n            );\n        }\n        if (test) {\n            libs.remove(ob);\n        }\n    });\n    return (prevLength - libs.handlers.length);\n}","import triggerRoute from '../triggerRoute';\nimport { POP_STATE } from '../../utils/constants';\nimport { loc } from '../../utils/vars';\nimport { assign } from '../../utils/assign';\n\n/**\n * Initializes router events\n * @private\n */\nexport default function initRouterEvents() {\n    window.addEventListener(`${POP_STATE}`, function (e) {\n        const paths = (`${loc.pathname}${loc.hash}`).split('#');\n        const defaultConfig = {\n            originalEvent: e,\n            originalData: assign(e.state && e.state.data)\n        };\n        triggerRoute(assign({}, defaultConfig, {\n            route: paths[0],\n            hash: false\n        }));\n        if (paths[1]) {\n            triggerRoute(assign({}, defaultConfig, {\n                route: `#${paths[1]}`,\n                hash: true\n            }));\n        }\n    });\n}","import { INVALID_LIST } from '../../utils/constants';\nimport { extractParams } from '../../utils/params';\nimport { trim } from '../../utils/utils';\n\nexport default function includesRoute(list, route) {\n    route = trim(route);\n    if (!Array.isArray(list)) {\n        throw new TypeError(INVALID_LIST);\n    }\n    let result = false;\n    for (let index = 0; index < list.length; index++) {\n        const listItem = trim(list[index]);\n        if (\n            ['*', route].indexOf(listItem) > -1\n            || !!Object.keys(extractParams(listItem, route)).length\n        ) {\n            result = true;\n            break;\n        }\n    }\n    return result;\n}","import { extractParams } from './utils/params';\nimport { CASE_INSENSITIVE_FLAG } from './utils/constants';\nimport { toQueryString } from './utils/query';\nimport { deparam } from './utils/deparam';\nimport execRoute from './api/execRoute';\nimport bindRoute from './api/bindRoute';\nimport unbindRoute from './api/unbindRoute';\nimport initRouterEvents from './api/initRouterEvents';\nimport { toArray } from './utils/utils';\nimport includesRoute from './api/includesRoute';\nimport { libs } from './utils/libs';\n\n/**\n * @namespace router\n * @public\n * @type {object}\n */\nconst router = {\n    /**\n     * Sets a route url\n     * @public\n     * @param {string|object} route Route object or URL\n     * @param {boolean} replaceMode Flag to enable replace mode\n     * @param {boolean} noTrigger Flag to disable handler while changing route\n     */\n    set() {\n        return execRoute.apply(this, arguments);\n    },\n    includes() {\n        return includesRoute.apply(this, arguments);\n    },\n    list() {\n        const routeList = [];\n        libs.handlers.forEach(handler => {\n            let route = `${handler.hash ? '#' : ''}${handler.route}`;\n            if (routeList.indexOf(route) === -1) {\n                routeList.push(route);\n            }\n        });\n        return routeList;\n    }\n}\n\n/**\n * Attaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction route() {\n    return bindRoute.apply(this, arguments);\n}\n\n/**\n * Attaches case insensitive route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction routeIgnoreCase(firstArg) {\n    if (typeof firstArg === 'string') {\n        route.apply(this, [`${CASE_INSENSITIVE_FLAG}${firstArg}`, toArray(arguments).slice(1)]);\n    }\n}\n\n/**\n * Detaches a route handler\n * @public\n * @param {string|function} route Route string or handler function (in case of generic route)\n * @param {function} handler Handler function\n */\nfunction unroute() {\n    return unbindRoute.apply(this, arguments);\n}\n\ninitRouterEvents();\n\nexport {\n    router,\n    route,\n    routeIgnoreCase,\n    unroute,\n    deparam,\n    toQueryString as param,\n    extractParams as routeParams\n};"],"names":["HASH_CHANGE","POP_STATE","ROUTE_CHANGED","REG_ROUTE_PARAMS","REG_PATHNAME","REG_HASH_QUERY","INVALID_ROUTE","INVALID_LIST","CASE_INSENSITIVE_FLAG","LOCAL_ENV","isArr","Array","isArray","trim","str","isNumber","key","indexOf","isNaN","isObject","value","isPureObject","def","defaultValue","toArray","arr","prototype","slice","call","isValidRoute","route","test","isHashURL","URL","charAt","isFunc","fn","getPopStateEvent","type","data","state","keys","obj","Object","hasOwn","ob","hasOwnProperty","each","arrayObj","callback","length","index","continueTheLoop","apply","loc","window","location","f","String","fromCharCode","extractParams","expr","path","pathname","params","pathRegex","RegExp","replace","lastIndex","match","map","values","shift","forEach","buildQuery","qsList","obKey","push","encodeURIComponent","toQueryString","join","ifComplex","q","deparam","qs","coerce","search","queryObject","split","qq","qArr","part","decodeURIComponent","complex","simple","concat","toObject","convertedObj","resolve","isNextNumber","resolveObj","nextProp","coercion","prop","resolved","coercedValue","tempObj","undefined","NaN","lib","arguments","loopFunc","ref","target","assign","i","_update","context","bitsPerChar","getCharFromInt","context_data_position","context_data","context_data_val","_updateContextNumBits","context_enlargeIn","context_numBits","_updateContext","context_dictionaryToCreate","context_w","charCodeAt","context_dictionary","compress","uncompressed","context_c","context_wc","context_dictSize","ii","_commonRep3","maxpower","resetValue","getNextValue","bits","power","resb","val","position","decompress","dictionary","result","enlargeIn","dictSize","numBits","entry","w","c","Math","pow","toUTF16","input","a","fromUTF16","compressed","setCookie","domain","hostname","isSecure","protocol","transformedValue","JSON","stringify","cookiePath","cookieDomain","secureFlag","document","cookie","getCookie","cookieStr","cookiePair","keyPart","indexOfKey","substring","isStorageAvailable","sessionStorage","setItem","removeItem","e","set","get","getItem","parse","store","Libs","handlers","getDataFromStore","isHash","paths","setDataToStore","newPath","contains","filter","remove","item","splice","libs","resolveQuery","queryString","append","getQueryParams","hashQuery","hash","testRoute","url","originalData","hasMatch","execListeners","eventName","rc","currentPath","tr","isCaseInsensitive","toLowerCase","handler","query","triggerRoute","originalEvent","trigger","execRoute","replaceMode","noTrigger","ro","routeParts","pureRoute","completeRoute","appendQuery","history","title","TypeError","bindGenericRoute","prevHandler","bindRoute","containsHash","unbindRoute","prevLength","isRouteList","args","singleArg","initRouterEvents","addEventListener","defaultConfig","includesRoute","list","listItem","router","includes","routeList","routeIgnoreCase","firstArg","unroute"],"mappings":"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"}